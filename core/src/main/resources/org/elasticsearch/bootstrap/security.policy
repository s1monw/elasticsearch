/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Default security policy file.
// On startup, BootStrap reads environment and adds additional permissions
// for configured paths to these.

//// System code permissions:
//// These permissions apply to the JDK itself:

grant codeBase "file:${{java.ext.dirs}}/*" {
  permission java.security.AllPermission;
};

//// Very special jar permissions:
//// These are dangerous permissions that we don't want to grant to everything.

grant codeBase "${es.security.jar.lucene.core}" {
  // needed to allow MMapDirectory's "unmap hack"
  permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

//// test framework permissions.
//// These are mock objects and test management that we allow test framework libs
//// to provide on our behalf. But tests themselves cannot do this stuff!

grant codeBase "${es.security.jar.elasticsearch.securemock}" {
  // needed to access ReflectionFactory (see below)
  permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
  // needed to support creation of mocks
  permission java.lang.RuntimePermission "reflectionFactoryAccess";
  // needed for spy interception, etc
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

grant codeBase "${es.security.jar.lucene.testframework}" {
  // needed by RamUsageTester
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
};

grant codeBase "${es.security.jar.randomizedtesting.runner}" {
  // optionally needed for access to private test methods (e.g. beforeClass)
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // needed for top threads handling
  permission java.lang.RuntimePermission "modifyThreadGroup";
};

grant codeBase "${es.security.jar.randomizedtesting.junit4}" {
  // needed for gson serialization
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

  // needed for stream redirection
  permission java.lang.RuntimePermission "setIO";
};

//// Everything else:

grant {

  // checked by scripting engines, and before hacks and other issues in
  // third party code, to safeguard these against unprivileged code like scripts.
  permission org.elasticsearch.SpecialPermission;

  // Allow connecting to the internet anywhere
  permission java.net.SocketPermission "*", "accept,listen,connect,resolve";

  // Allow read/write to all system properties
  permission java.util.PropertyPermission "*", "read,write";

  // needed by lucene SPI currently 
  permission java.lang.RuntimePermission "getClassLoader";

  // needed by Settings
  permission java.lang.RuntimePermission "getenv.*";

  // needed by ES threadpool termination... clean this up
  // otherwise can be provided only to test libraries
  permission java.lang.RuntimePermission "modifyThread";

  // needed by ExceptionSerializationTests and RestTestCase for
  // some hackish things they do. otherwise only needed by groovy 
  // (TODO: clean this up?)
  permission java.lang.RuntimePermission "getProtectionDomain";
  
  // likely not low hanging fruit...
  permission java.lang.RuntimePermission "accessDeclaredMembers";

  // needed by HotThreads and potentially more
  // otherwise can be provided only to test libraries
  permission java.lang.RuntimePermission "getStackTrace";

  // needed by ESTestCase for leniency of thread exceptions (?!)
  // otherwise can be provided only to test libraries
  permission java.lang.RuntimePermission "setDefaultUncaughtExceptionHandler";

  // needed by JMX instead of getFileSystemAttributes, seems like a bug...
  permission java.lang.RuntimePermission "getFileStoreAttributes";

  // needed for jimfs and NewPathForShardsTests
  // otherwise can be provided only to test libraries
  permission java.lang.RuntimePermission "fileSystemProvider";

  // needed by plugin manager to set unix permissions
  permission java.lang.RuntimePermission "accessUserInformation";

  // needed by jvminfo for monitoring the jvm
  permission java.lang.management.ManagementPermission "monitor";

  // needed by JDKESLoggerTests
  permission java.util.logging.LoggingPermission "control";

  // needed to install SSLFactories, advanced SSL configuration, etc.
  permission java.lang.RuntimePermission "setFactory";
  
  // needed to allow installation of bouncycastle crypto provider
  permission java.security.SecurityPermission "putProviderProperty.BC";
};
